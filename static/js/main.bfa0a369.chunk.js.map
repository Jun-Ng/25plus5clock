{"version":3,"sources":["Components/clock.js","index.js"],"names":["Clock","props","state","break","session","currentTimeLeft","mins","seconds","counting","counted","togglebreak","reset","handleClick","bind","handleStartStop","handleReset","event","console","log","currentTarget","id","this","setState","preventDefault","document","getElementById","pause","currentTime","innerText","Math","floor","play","newUpdate","setInterval","everyUpdate","clearInterval","onClick","className","style","fontSize","src","type","React","Component","App","current","ReactDOM","render"],"mappings":"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","file":"static/js/main.bfa0a369.chunk.js","sourcesContent":["import React from 'react'\n\nclass Clock extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            break: 5,\n            session: 25,\n            currentTimeLeft : 0,\n            mins : 0,\n            seconds : 0,\n            counting : false,\n            counted: false,\n            togglebreak : false,\n            reset : false,\n        }\n        this.handleClick = this.handleClick.bind(this)\n        this.handleStartStop = this.handleStartStop.bind(this)\n        this.handleReset = this.handleReset.bind(this)\n    }\n\n    handleClick(event){\n        console.log(event.currentTarget.id)\n        if(event.currentTarget.id === 'break-increment' && this.state.break < 60){\n            this.setState({\n                break: this.state.break + 1\n            })\n        }else if(event.currentTarget.id === 'break-decrement' && this.state.break > 1){\n            this.setState({\n                break: this.state.break - 1\n            })\n        } else if (event.currentTarget.id === 'session-increment' && this.state.session < 60){\n            this.setState({\n                session: this.state.session + 1\n            })\n        }else if (event.currentTarget.id === 'session-decrement' && this.state.session > 1){\n            this.setState({\n                session : this.state.session - 1\n            })\n        }\n\n        event.preventDefault()\n    }\n\n    handleReset(){\n        this.setState({\n            break: 5,\n            session: 25,\n            currentTimeLeft : 0,\n            mins : 0,\n            seconds : 0,\n            counting : false,\n            counted: false,\n            togglebreak : false,\n            reset : true,\n        })\n        document.getElementById('beep').pause();\n        document.getElementById('beep').currentTime = 0;\n        document.getElementById('start_stop').innerText = 'Start'\n    }\n\n    handleStartStop(event){\n        if(event.currentTarget.innerText === 'Start'){\n            event.currentTarget.innerText = 'Stop'\n            if(this.state.counted === false){\n                this.setState({\n                    currentTimeLeft : this.state.session*60,\n                    counting : true,\n                    counted : true,\n                    reset : false,\n                })\n            }else if(this.state.counted){\n                this.setState({\n                    currentTimeLeft : this.state.currentTimeLeft,\n                    counting: true,\n                    reset : false,\n                })\n            }\n        }else{\n            event.currentTarget.innerText = 'Start'\n            this.setState({\n                currentTimeLeft : this.state.currentTimeLeft,\n                counting : false,\n                reset : false,\n            })\n        }\n    }\n\n    everyUpdate(){\n        if(this.state.counting === true){\n            if(this.state.currentTimeLeft > 0){\n                this.setState({\n                    currentTimeLeft : this.state.currentTimeLeft - 1,\n                })\n                this.setState({\n                    seconds : Math.floor(this.state.currentTimeLeft % 60),\n                    mins : Math.floor(this.state.currentTimeLeft / 60)\n                })\n            }else if(this.state.currentTimeLeft <= 0){\n                this.setState({\n                    currentTimeLeft : (this.state.break*60),\n                    togglebreak : !this.state.togglebreak,\n                })\n            }else{\n                return this.state.session\n            }\n        }\n        if(document.getElementById('time-left') === '00:00'){\n            document.getElementById('beep').play()\n        }\n    }\n\n    componentDidMount(){\n       this.newUpdate = setInterval(\n           () => this.everyUpdate() , 1000\n       )\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.newUpdate)\n    }\n\n\n    render(){\n        let display = () =>{\n            if(this.state.counted === false){\n                return (this.state.session < 10 ? '0' + this.state.session + ':00' : this.state.session + ':00')\n            }else if(this.state.counted === true){\n                if(this.state.currentTimeLeft > 0){\n                    let minutes = Math.floor(this.state.currentTimeLeft / 60) < 10 ? '0' + Math.floor(this.state.currentTimeLeft / 60) : Math.floor(this.state.currentTimeLeft / 60) ;\n                    let seconds = this.state.currentTimeLeft % 60 < 10 ? '0' + this.state.currentTimeLeft % 60 : this.state.currentTimeLeft % 60;\n\n                    return (minutes + ':' + seconds)\n                }\n            } \n            document.getElementById('beep').play()\n            return '00:00'\n        }\n        \n        return(\n            <div id=\"Clock\">\n                <div id=\"break-section\">\n                    <h2 id=\"break-label\">Break Length</h2>\n                    <div id=\"break-button\">\n                        <button onClick={this.handleClick} className=\"btn\" id=\"break-increment\"><i style={{fontSize : 48}} className=\"fas fa-angle-up\"></i></button>\n                        <h2 className=\"break-time\" id=\"break-length\">{this.state.break}</h2>\n                        <button onClick={this.handleClick} className=\"btn\" id=\"break-decrement\"><i style={{fontSize : 48}} className=\"fas fa-angle-down\"></i></button>\n                    </div>\n                </div>\n                <div id=\"session-section\">\n                    <h2 id=\"session-label\">Session Length</h2>\n                    <div id=\"session-button\">\n                        <button onClick={this.handleClick} className=\"btn\" id=\"session-increment\"><i style={{fontSize : 48}} className=\"fas fa-angle-up\"></i></button>\n                        <h2 className=\"break-time\" id=\"session-length\">{this.state.session}</h2>\n                        <button onClick={this.handleClick} className=\"btn\" id=\"session-decrement\"><i style={{fontSize : 48}} className=\"fas fa-angle-down\"></i></button>\n                    </div>\n                </div>\n                <div id=\"countdown\">\n                    <h1 id=\"timer-label\">{this.state.togglebreak ? 'Break' : 'Session'}</h1>\n                    <h1 id=\"time-left\"><audio id=\"beep\" src=\"https://www.zapsplat.com/wp-content/uploads/2015/sound-effects-18146/zapsplat_cartoon_cat_meow_19819.mp3?_=1\" type=\"audio/mp3\"></audio>{display()}</h1>\n                    <button className=\"btn\" onClick={this.handleStartStop} id=\"start_stop\" style={{fontSize : 20}}>Start</button>\n                    <button  onClick={this.handleReset} className=\"btn\" id=\"reset\">Reset</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Clock","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport Clock from './Components/clock'\n\nclass App extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            current : 0,\n        }\n    }\n\n    render(){\n        return(\n\n            <div id=\"afterRoot\">\n                <div id=\"titlediv\">\n                    <h1>25 + 5 Clock</h1>\n                </div>\n                <Clock />\n            </div>\n        \n        )\n    }\n}\n\n\nReactDOM.render(<App />\n, document.getElementById('root'))\n\n"],"sourceRoot":""}